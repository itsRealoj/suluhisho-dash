{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/realoj/Dev/suluhisho-dash/pages/admin/faqs.js\";\nimport React, { useEffect, useState } from 'react';\nimport { firestore, auth } from '../../firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Admin from 'layouts/Admin.js';\nimport Divider from '@material-ui/core/Divider';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport GridItem from 'components/Grid/GridItem.js';\nimport Button from 'components/CustomButtons/Button.js';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport GridContainer from 'components/Grid/GridContainer.js';\nimport Card from 'components/Card/Card.js';\nimport CardHeader from 'components/Card/CardHeader.js';\nimport CardBody from 'components/Card/CardBody.js';\nimport { useRouter } from 'next/router';\nimport ManageFAQ from 'components/Menu/faqMenu.js';\nconst useStyles = makeStyles({\n  cardCategoryWhite: {\n    color: '#434444',\n    margin: '0',\n    fontSize: '14px',\n    marginTop: '0',\n    marginBottom: '0'\n  },\n  cardTitleWhite: {\n    color: '#434444',\n    marginTop: '0px',\n    fontSize: '25px',\n    minHeight: 'auto',\n    fontWeight: 'bold',\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: '3px',\n    textDecoration: 'none',\n    '& small': {\n      color: '#777',\n      fontSize: '65%',\n      fontWeight: '400',\n      lineHeight: '1'\n    }\n  },\n  pagination: {\n    padding: '10px'\n  },\n  root: {\n    paddingTop: '3px'\n  },\n  btn: {\n    float: 'right'\n  },\n  cardItem: {\n    paddingRight: '10px',\n    paddingLeft: '10px',\n    marginTop: '0px',\n    fontSize: '17px'\n  },\n  cardItemTitle: {\n    paddingRight: '10px',\n    paddingLeft: '10px',\n    marginBottom: '3px',\n    marginTop: '15px',\n    fontWeight: 400,\n    fontSize: '25px'\n  }\n});\nexport default function Reports() {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    0: faqs,\n    1: setFAQs\n  } = useState([]);\n  const {\n    0: page,\n    1: setPage\n  } = useState(0);\n  const {\n    0: rowsPerPage,\n    1: setRowsPerPage\n  } = useState(10);\n  const {\n    0: totalFaqs,\n    1: setTotalFaqsSize\n  } = useState(0);\n  const {\n    0: lastVisibleData,\n    1: setLastVisibleData\n  } = useState(null);\n  const {\n    0: isUserLoggedIn,\n    1: setIsUserLoggedIn\n  } = useState(false);\n  const {\n    0: open,\n    1: SetOpen\n  } = useState(false);\n\n  const handleChangePage = (event, newPage) => {\n    newPage > page ? fetchNextFaqs() : fetchPreviousFaqs();\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    fetchFAQs();\n  };\n\n  const faqsSize = () => {\n    firestore.collection('faqs').get().then(snap => {\n      setTotalFaqsSize(snap.size);\n    });\n  };\n\n  const fetchNextFaqs = async () => {\n    const faqArr = [];\n    firestore.collection('faqs').orderBy('title').startAfter(lastVisibleData).limit(rowsPerPage).get().then(querySnapshot => {\n      querySnapshot.forEach(alert => {\n        let currentAlertData = alert.data();\n        currentAlertData.id = alert.id;\n        faqArr.push(currentAlertData);\n        setLastVisibleData(querySnapshot.docs[querySnapshot.docs.length - 1]);\n      });\n    }).then(() => {\n      setFAQs(faqArr);\n    });\n  };\n\n  const fetchPreviousFaqs = async () => {\n    const faqArr = [];\n    firestore.collection('faqs').orderBy('title').endBefore(lastVisibleData).limit(rowsPerPage).get().then(querySnapshot => {\n      querySnapshot.forEach(alert => {\n        let currentAlertData = alert.data();\n        currentAlertData.id = alert.id;\n        faqArr.push(currentAlertData);\n        setLastVisibleData(querySnapshot.docs[querySnapshot.docs.length - 1]);\n      });\n    }).then(() => {\n      setFAQs(faqArr);\n    });\n  }; // fetch faqs from firestore\n\n\n  const fetchFAQs = async () => {\n    const faqArr = [];\n    firestore.collection('faqs').orderBy('title').limit(rowsPerPage).get().then(snap => {\n      snap.forEach(faq => {\n        let newFaq = faq.data();\n        newFaq.id = faq.id;\n        faqArr.push(newFaq);\n        setLastVisibleData(snap.docs[snap.docs.length - 1]);\n      });\n    }).then(() => {\n      setFAQs(faqArr);\n    });\n  };\n\n  useEffect(() => {\n    fetchFAQs();\n    faqsSize();\n    auth.onAuthStateChanged(async user => {\n      if (!user) {\n        router.push('../login');\n      } else {\n        setIsUserLoggedIn(true);\n      }\n    });\n  }, []);\n  return isUserLoggedIn ? /*#__PURE__*/_jsxDEV(GridContainer, {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 12,\n              md: 10,\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: classes.cardTitleWhite,\n                children: [\"Frequently Asked Questions\", /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  color: \"primary\",\n                  className: classes.btn,\n                  onClick: () => router.push('add-faq'),\n                  children: \"Add A FAQ\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 12,\n              md: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.root,\n            children: faqs.map(faq => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.cardItemTitle,\n                children: [/*#__PURE__*/_jsxDEV(ManageFAQ, {\n                  faq: faq,\n                  fetchFAQs: fetchFAQs\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), faq.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: classes.cardItem,\n                children: faq.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 10,\n            container: true,\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(TablePagination, {\n              component: \"div\",\n              count: totalFaqs,\n              page: page,\n              onPageChange: handleChangePage,\n              rowsPerPage: rowsPerPage,\n              onRowsPerPageChange: handleChangeRowsPerPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 2,\n            container: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this) : null;\n}\nReports.layout = Admin;","map":{"version":3,"sources":["/Users/realoj/Dev/suluhisho-dash/pages/admin/faqs.js"],"names":["React","useEffect","useState","firestore","auth","makeStyles","Admin","Divider","TablePagination","Paper","GridItem","Button","ExpandMore","ExpandLess","GridContainer","Card","CardHeader","CardBody","useRouter","ManageFAQ","useStyles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","pagination","padding","root","paddingTop","btn","float","cardItem","paddingRight","paddingLeft","cardItemTitle","Reports","classes","router","faqs","setFAQs","page","setPage","rowsPerPage","setRowsPerPage","totalFaqs","setTotalFaqsSize","lastVisibleData","setLastVisibleData","isUserLoggedIn","setIsUserLoggedIn","open","SetOpen","handleChangePage","event","newPage","fetchNextFaqs","fetchPreviousFaqs","handleChangeRowsPerPage","parseInt","target","value","fetchFAQs","faqsSize","collection","get","then","snap","size","faqArr","orderBy","startAfter","limit","querySnapshot","forEach","alert","currentAlertData","data","id","push","docs","length","endBefore","faq","newFaq","onAuthStateChanged","user","container","map","title","text","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { firestore, auth } from '../../firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Admin from 'layouts/Admin.js';\nimport Divider from '@material-ui/core/Divider';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport GridItem from 'components/Grid/GridItem.js';\nimport Button from 'components/CustomButtons/Button.js';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport GridContainer from 'components/Grid/GridContainer.js';\nimport Card from 'components/Card/Card.js';\nimport CardHeader from 'components/Card/CardHeader.js';\nimport CardBody from 'components/Card/CardBody.js';\nimport { useRouter } from 'next/router';\nimport ManageFAQ from 'components/Menu/faqMenu.js';\n\nconst useStyles = makeStyles({\n  cardCategoryWhite: {\n    color: '#434444',\n    margin: '0',\n    fontSize: '14px',\n    marginTop: '0',\n    marginBottom: '0',\n  },\n  cardTitleWhite: {\n    color: '#434444',\n    marginTop: '0px',\n    fontSize: '25px',\n    minHeight: 'auto',\n    fontWeight: 'bold',\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: '3px',\n    textDecoration: 'none',\n    '& small': {\n      color: '#777',\n      fontSize: '65%',\n      fontWeight: '400',\n      lineHeight: '1',\n    },\n  },\n  pagination: {\n    padding: '10px',\n  },\n  root: {\n    paddingTop: '3px',\n  },\n  btn: {\n    float: 'right',\n  },\n  cardItem: {\n    paddingRight: '10px',\n    paddingLeft: '10px',\n    marginTop: '0px',\n    fontSize: '17px',\n  },\n  cardItemTitle: {\n    paddingRight: '10px',\n    paddingLeft: '10px',\n    marginBottom: '3px',\n    marginTop: '15px',\n    fontWeight: 400,\n    fontSize: '25px',\n  },\n});\n\nexport default function Reports() {\n  const classes = useStyles();\n  const router = useRouter();\n  const [faqs, setFAQs] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [totalFaqs, setTotalFaqsSize] = useState(0);\n  const [lastVisibleData, setLastVisibleData] = useState(null);\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [open, SetOpen] = useState(false);\n\n  const handleChangePage = (event, newPage) => {\n    newPage > page ? fetchNextFaqs() : fetchPreviousFaqs();\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    fetchFAQs();\n  };\n\n  const faqsSize = () => {\n    firestore\n      .collection('faqs')\n      .get()\n      .then((snap) => {\n        setTotalFaqsSize(snap.size);\n      });\n  };\n\n  const fetchNextFaqs = async () => {\n    const faqArr = [];\n    firestore\n      .collection('faqs')\n      .orderBy('title')\n      .startAfter(lastVisibleData)\n      .limit(rowsPerPage)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((alert) => {\n          let currentAlertData = alert.data();\n          currentAlertData.id = alert.id;\n          faqArr.push(currentAlertData);\n          setLastVisibleData(querySnapshot.docs[querySnapshot.docs.length - 1]);\n        });\n      })\n      .then(() => {\n        setFAQs(faqArr);\n      });\n  };\n\n  const fetchPreviousFaqs = async () => {\n    const faqArr = [];\n    firestore\n      .collection('faqs')\n      .orderBy('title')\n      .endBefore(lastVisibleData)\n      .limit(rowsPerPage)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((alert) => {\n          let currentAlertData = alert.data();\n          currentAlertData.id = alert.id;\n          faqArr.push(currentAlertData);\n          setLastVisibleData(querySnapshot.docs[querySnapshot.docs.length - 1]);\n        });\n      })\n      .then(() => {\n        setFAQs(faqArr);\n      });\n  };\n\n  // fetch faqs from firestore\n  const fetchFAQs = async () => {\n    const faqArr = [];\n    firestore\n      .collection('faqs')\n      .orderBy('title')\n      .limit(rowsPerPage)\n      .get()\n      .then((snap) => {\n        snap.forEach((faq) => {\n          let newFaq = faq.data();\n          newFaq.id = faq.id;\n          faqArr.push(newFaq);\n          setLastVisibleData(snap.docs[snap.docs.length - 1]);\n        });\n      })\n      .then(() => {\n        setFAQs(faqArr);\n      });\n  };\n\n  useEffect(() => {\n    fetchFAQs();\n    faqsSize();\n    auth.onAuthStateChanged(async (user) => {\n      if (!user) {\n        router.push('../login');\n      } else {\n        setIsUserLoggedIn(true);\n      }\n    });\n  }, []);\n\n  return isUserLoggedIn ? (\n    <GridContainer className={classes.container}>\n      <GridItem xs={12} sm={12} md={12}>\n        <Card>\n          <CardHeader>\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={10}>\n                <h4 className={classes.cardTitleWhite}>\n                  Frequently Asked Questions\n                  <Button\n                    size=\"sm\"\n                    color=\"primary\"\n                    className={classes.btn}\n                    onClick={() => router.push('add-faq')}\n                  >\n                    Add A FAQ\n                  </Button>\n                </h4>\n              </GridItem>\n\n              <GridItem xs={12} sm={12} md={2}></GridItem>\n            </GridContainer>\n          </CardHeader>\n          <Divider />\n          <CardBody>\n            <Paper className={classes.root}>\n              {faqs.map((faq) => (\n                <>\n                  <div className={classes.cardItemTitle}>\n                    <ManageFAQ faq={faq} fetchFAQs={fetchFAQs} />\n                    {faq.title}\n                  </div>\n                  <h5 className={classes.cardItem}>{faq.text}</h5>\n                  <Divider />\n                </>\n              ))}\n            </Paper>\n          </CardBody>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={10} container justify=\"center\">\n              <TablePagination\n                component=\"div\"\n                count={totalFaqs}\n                page={page}\n                onPageChange={handleChangePage}\n                rowsPerPage={rowsPerPage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={2} container></GridItem>\n          </GridContainer>\n        </Card>\n      </GridItem>\n    </GridContainer>\n  ) : null;\n}\nReports.layout = Admin;\n"]},"metadata":{},"sourceType":"module"}