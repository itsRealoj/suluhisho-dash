{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/realoj/Dev/suluhisho-dash/pages/admin/dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { firestore, auth } from '../../firebase';\nimport Icon from '@material-ui/core/Icon';\nimport Store from '@material-ui/icons/Store';\nimport Admin from 'layouts/Admin.js';\nimport GridItem from 'components/Grid/GridItem.js';\nimport GridContainer from 'components/Grid/GridContainer.js';\nimport Card from 'components/Card/Card.js';\nimport CardHeader from 'components/Card/CardHeader.js';\nimport CardIcon from 'components/Card/CardIcon.js';\nimport CardFooter from 'components/Card/CardFooter.js';\nimport styles from 'assets/jss/nextjs-material-dashboard/views/dashboardStyle.js';\nimport { useRouter } from 'next/router';\n\nfunction Dashboard() {\n  _s();\n\n  const useStyles = makeStyles(styles);\n  const router = useRouter();\n  const classes = useStyles({\n    root: {\n      width: '100%'\n    }\n  });\n  const {\n    0: totalAlerts,\n    1: setTotalAlerts\n  } = useState(0);\n  const {\n    0: totalUsers,\n    1: setTotalUsers\n  } = useState(0);\n  const {\n    0: totalServiceProviders,\n    1: setTotalServiceProviders\n  } = useState(0);\n  const {\n    0: isUserLoggedIn,\n    1: setIsUserLoggedIn\n  } = useState(false);\n\n  const alertsSize = () => {\n    firestore.collection('sms').get().then(snap => {\n      setTotalAlerts(snap.size);\n    });\n  };\n\n  const usersSize = () => {\n    firestore.collection('users').get().then(snap => {\n      setTotalUsers(snap.size);\n    });\n  };\n\n  const serviceProvidersSize = () => {\n    firestore.collection('serviceProviders').get().then(snap => {\n      setTotalServiceProviders(snap.size);\n    });\n  };\n\n  useEffect(() => {\n    alertsSize();\n    usersSize();\n    serviceProvidersSize();\n    auth.onAuthStateChanged(async user => {\n      if (!user) {\n        router.push('../login');\n      } else {\n        setIsUserLoggedIn(true);\n      }\n    });\n  }, []);\n  return isUserLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            color: \"warning\",\n            stats: true,\n            icon: true,\n            children: [/*#__PURE__*/_jsxDEV(CardIcon, {\n              color: \"warning\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                children: \"content_copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.cardCategory,\n              children: \"Total Reported Incidents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: classes.cardTitle,\n              children: totalAlerts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n            stats: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            color: \"dark\",\n            stats: true,\n            icon: true,\n            children: [/*#__PURE__*/_jsxDEV(CardIcon, {\n              color: \"dark\",\n              children: /*#__PURE__*/_jsxDEV(Store, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.cardCategory,\n              children: \"Total Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: classes.cardTitle,\n              children: totalUsers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n            stats: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            color: \"primary\",\n            stats: true,\n            icon: true,\n            children: [/*#__PURE__*/_jsxDEV(CardIcon, {\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                children: \"info_outline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.cardCategory,\n              children: \"Total Service Providers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: classes.cardTitle,\n              children: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n            stats: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_s(Dashboard, \"bAlXEiXRd11Mdwlirsm1pHvaHNM=\", false, function () {\n  return [useRouter, useStyles];\n});\n\n_c = Dashboard;\nDashboard.layout = Admin;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/realoj/Dev/suluhisho-dash/pages/admin/dashboard.js"],"names":["React","useEffect","useState","makeStyles","firestore","auth","Icon","Store","Admin","GridItem","GridContainer","Card","CardHeader","CardIcon","CardFooter","styles","useRouter","Dashboard","useStyles","router","classes","root","width","totalAlerts","setTotalAlerts","totalUsers","setTotalUsers","totalServiceProviders","setTotalServiceProviders","isUserLoggedIn","setIsUserLoggedIn","alertsSize","collection","get","then","snap","size","usersSize","serviceProvidersSize","onAuthStateChanged","user","push","cardCategory","cardTitle","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { firestore, auth } from '../../firebase';\nimport Icon from '@material-ui/core/Icon';\nimport Store from '@material-ui/icons/Store';\nimport Admin from 'layouts/Admin.js';\nimport GridItem from 'components/Grid/GridItem.js';\nimport GridContainer from 'components/Grid/GridContainer.js';\nimport Card from 'components/Card/Card.js';\nimport CardHeader from 'components/Card/CardHeader.js';\nimport CardIcon from 'components/Card/CardIcon.js';\nimport CardFooter from 'components/Card/CardFooter.js';\nimport styles from 'assets/jss/nextjs-material-dashboard/views/dashboardStyle.js';\nimport { useRouter } from 'next/router';\n\nfunction Dashboard() {\n  const useStyles = makeStyles(styles);\n  const router = useRouter();\n  const classes = useStyles({\n    root: {\n      width: '100%',\n    },\n  });\n\n  const [totalAlerts, setTotalAlerts] = useState(0);\n  const [totalUsers, setTotalUsers] = useState(0);\n  const [totalServiceProviders, setTotalServiceProviders] = useState(0);\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n\n  const alertsSize = () => {\n    firestore\n      .collection('sms')\n      .get()\n      .then((snap) => {\n        setTotalAlerts(snap.size);\n      });\n  };\n\n  const usersSize = () => {\n    firestore\n      .collection('users')\n      .get()\n      .then((snap) => {\n        setTotalUsers(snap.size);\n      });\n  };\n\n  const serviceProvidersSize = () => {\n    firestore\n      .collection('serviceProviders')\n      .get()\n      .then((snap) => {\n        setTotalServiceProviders(snap.size);\n      });\n  };\n\n  useEffect(() => {\n    alertsSize();\n    usersSize();\n    serviceProvidersSize();\n    auth.onAuthStateChanged(async (user) => {\n      if (!user) {\n        router.push('../login');\n      } else {\n        setIsUserLoggedIn(true);\n      }\n    });\n  }, []);\n\n  return isUserLoggedIn ? (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={6} md={4}>\n          <Card>\n            <CardHeader color=\"warning\" stats icon>\n              <CardIcon color=\"warning\">\n                <Icon>content_copy</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Total Reported Incidents</p>\n              <h3 className={classes.cardTitle}>{totalAlerts}</h3>\n            </CardHeader>\n            <CardFooter stats></CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={6} md={4}>\n          <Card>\n            <CardHeader color=\"dark\" stats icon>\n              <CardIcon color=\"dark\">\n                <Store />\n              </CardIcon>\n              <p className={classes.cardCategory}>Total Users</p>\n              <h3 className={classes.cardTitle}>{totalUsers}</h3>\n            </CardHeader>\n            <CardFooter stats></CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={6} md={4}>\n          <Card>\n            <CardHeader color=\"primary\" stats icon>\n              <CardIcon color=\"primary\">\n                <Icon>info_outline</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Total Service Providers</p>\n              <h3 className={classes.cardTitle}>{5}</h3>\n            </CardHeader>\n            <CardFooter stats></CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer></GridContainer>\n    </div>\n  ) : null;\n}\nDashboard.layout = Admin;\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}