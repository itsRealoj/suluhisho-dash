{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/realoj/Dev/suluhisho-dash/components/Table/Table.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\"; // core components\n\nimport styles from \"assets/jss/nextjs-material-dashboard/components/tableStyle.js\";\nexport default function CustomTable(props) {\n  _s();\n\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const {\n    tableHead,\n    tableData,\n    tableHeaderColor\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.tableResponsive,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      children: [tableHead !== undefined ? /*#__PURE__*/_jsxDEV(TableHead, {\n        className: classes[tableHeaderColor + \"TableHeader\"],\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          className: classes.tableHeadRow,\n          children: tableHead.map((prop, key) => {\n            return /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableCell + \" \" + classes.tableHeadCell,\n              children: prop\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(TableBody, {\n        children: tableData.map((prop, key) => {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            className: classes.tableBodyRow,\n            children: prop.map((prop, key) => {\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                className: classes.tableCell,\n                children: prop\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this);\n            })\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomTable, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = CustomTable;\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"sources":["/Users/realoj/Dev/suluhisho-dash/components/Table/Table.js"],"names":["React","PropTypes","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","styles","CustomTable","props","useStyles","classes","tableHead","tableData","tableHeaderColor","tableResponsive","table","undefined","tableHeadRow","map","prop","key","tableCell","tableHeadCell","tableBodyRow","defaultProps","propTypes","oneOf","arrayOf","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,+DAAnB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAMC,SAAS,GAAGT,UAAU,CAACM,MAAD,CAA5B;AACA,QAAMI,OAAO,GAAGD,SAAS,EAAzB;AACA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,MAA6CL,KAAnD;AACA,sBACE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACI,eAAxB;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEJ,OAAO,CAACK,KAA1B;AAAA,iBACGJ,SAAS,KAAKK,SAAd,gBACC,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEN,OAAO,CAACG,gBAAgB,GAAG,aAApB,CAA7B;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,SAAS,EAAEH,OAAO,CAACO,YAA7B;AAAA,oBACGN,SAAS,CAACO,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5B,gCACE,QAAC,SAAD;AACE,cAAA,SAAS,EAAEV,OAAO,CAACW,SAAR,GAAoB,GAApB,GAA0BX,OAAO,CAACY,aAD/C;AAAA,wBAIGH;AAJH,eAEOC,GAFP;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WATA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,GAeG,IAhBN,eAiBE,QAAC,SAAD;AAAA,kBACGR,SAAS,CAACM,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5B,8BACE,QAAC,QAAD;AAAoB,YAAA,SAAS,EAAEV,OAAO,CAACa,YAAvC;AAAA,sBACGJ,IAAI,CAACD,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,KAAe;AACvB,kCACE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAEV,OAAO,CAACW,SAA9B;AAAA,0BACGF;AADH,iBAA8CC,GAA9C;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD,aANA;AADH,aAAeA,GAAf;AAAA;AAAA;AAAA;AAAA,kBADF;AAWD,SAZA;AADH;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAzCuBb,W;;KAAAA,W;AA2CxBA,WAAW,CAACiB,YAAZ,GAA2B;AACzBX,EAAAA,gBAAgB,EAAE;AADO,CAA3B;AAIAN,WAAW,CAACkB,SAAZ,GAAwB;AACtBZ,EAAAA,gBAAgB,EAAEd,SAAS,CAAC2B,KAAV,CAAgB,CAChC,SADgC,EAEhC,SAFgC,EAGhC,QAHgC,EAIhC,SAJgC,EAKhC,MALgC,EAMhC,MANgC,EAOhC,MAPgC,CAAhB,CADI;AAUtBf,EAAAA,SAAS,EAAEZ,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC6B,MAA5B,CAVW;AAWtBhB,EAAAA,SAAS,EAAEb,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC6B,MAA5B,CAAlB;AAXW,CAAxB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// core components\nimport styles from \"assets/jss/nextjs-material-dashboard/components/tableStyle.js\";\n\nexport default function CustomTable(props) {\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor } = props;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((prop, key) => {\n            return (\n              <TableRow key={key} className={classes.tableBodyRow}>\n                {prop.map((prop, key) => {\n                  return (\n                    <TableCell className={classes.tableCell} key={key}>\n                      {prop}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\",\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\",\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n};\n"]},"metadata":{},"sourceType":"module"}