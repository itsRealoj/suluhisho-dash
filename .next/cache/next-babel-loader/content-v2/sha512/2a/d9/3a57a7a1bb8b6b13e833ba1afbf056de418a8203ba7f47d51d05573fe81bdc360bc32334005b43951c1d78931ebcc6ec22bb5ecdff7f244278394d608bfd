{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/realoj/Dev/suluhisho-dash/context/reconciledContext.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nexport const ReconciledContext = /*#__PURE__*/createContext();\nexport const ReconciledCardTransProvider = props => {\n  const {\n    0: reconciledTrans,\n    1: setReconciledTrans\n  } = useState([]);\n  useEffect(() => {\n    const instance = axios.create({\n      baseURL: 'http://localhost:4000',\n      timeout: 30000\n    });\n    instance.get('/v1/transactiontypes/reconciled').then(response => {\n      const transactionData = response.data.result.filter(data => !data.approved).map(data => [moment(data.reconciledAt).format('LLL'), data.transactionId, data.cardNo, data.amount, data.reconciledBy, data.transactionStatus, /*#__PURE__*/_jsxDEV(Button, {\n        disabled: false,\n        variant: \"outlined\",\n        onClick: () => {\n          handleApprove(data);\n          setOpen(!open);\n        },\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }, this)]);\n      setAllReconciled(transactionData);\n      setCurrent(transactionData.slice(0, 10));\n    }).catch(error => console.log(error));\n  });\n  return /*#__PURE__*/_jsxDEV(ReconciledContext.Provider, {\n    value: {\n      reconciledTrans,\n      setReconciledTrans\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["/Users/realoj/Dev/suluhisho-dash/context/reconciledContext.js"],"names":["React","createContext","useEffect","useState","axios","ReconciledContext","ReconciledCardTransProvider","props","reconciledTrans","setReconciledTrans","instance","create","baseURL","timeout","get","then","response","transactionData","data","result","filter","approved","map","moment","reconciledAt","format","transactionId","cardNo","amount","reconciledBy","transactionStatus","handleApprove","setOpen","open","setAllReconciled","setCurrent","slice","catch","error","console","log","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAAyD,OAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,gBAAGJ,aAAa,EAAvC;AAEP,OAAO,MAAMK,2BAA2B,GAAIC,KAAD,IAAW;AAClD,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCN,QAAQ,CAAC,EAAD,CAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC1BC,MAAAA,OAAO,EAAE,uBADiB;AAE1BC,MAAAA,OAAO,EAAE;AAFiB,KAAb,CAAjB;AAKEH,IAAAA,QAAQ,CACLI,GADH,CACO,iCADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAT,CAAcC,MAAd,CACrBC,MADqB,CACbF,IAAD,IAAU,CAACA,IAAI,CAACG,QADF,EAErBC,GAFqB,CAEhBJ,IAAD,IAAU,CACbK,MAAM,CAACL,IAAI,CAACM,YAAN,CAAN,CAA0BC,MAA1B,CAAiC,KAAjC,CADa,EAEbP,IAAI,CAACQ,aAFQ,EAGbR,IAAI,CAACS,MAHQ,EAIbT,IAAI,CAACU,MAJQ,EAKbV,IAAI,CAACW,YALQ,EAMbX,IAAI,CAACY,iBANQ,eAOb,QAAC,MAAD;AACE,QAAA,QAAQ,EAAE,KADZ;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,OAAO,EAAE,MAAM;AACbC,UAAAA,aAAa,CAACb,IAAD,CAAb;AACAc,UAAAA,OAAO,CAAC,CAACC,IAAF,CAAP;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPa,CAFO,CAAxB;AAoBAC,MAAAA,gBAAgB,CAACjB,eAAD,CAAhB;AACAkB,MAAAA,UAAU,CAAClB,eAAe,CAACmB,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB,CAAD,CAAV;AACD,KAzBH,EA0BGC,KA1BH,CA0BUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CA1BpB;AA2BL,GAjCQ,CAAT;AAmCA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAC9B,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB,KAAnC;AAAA,cACKF,KAAK,CAACkC;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3CM","sourcesContent":["import React , {createContext, useEffect, useState} from 'react'\nimport axios from 'axios'\n\nexport const ReconciledContext = createContext();\n\nexport const ReconciledCardTransProvider = (props) => {\n    const [reconciledTrans, setReconciledTrans] = useState([])\n\n    useEffect(() => {\n        const instance = axios.create({\n            baseURL: 'http://localhost:4000',\n            timeout: 30000,\n          });\n      \n          instance\n            .get('/v1/transactiontypes/reconciled')\n            .then((response) => {\n              const transactionData = response.data.result\n                .filter((data) => !data.approved)\n                .map((data) => [\n                  moment(data.reconciledAt).format('LLL'),\n                  data.transactionId,\n                  data.cardNo,\n                  data.amount,\n                  data.reconciledBy,\n                  data.transactionStatus,\n                  <Button\n                    disabled={false}\n                    variant=\"outlined\"\n                    onClick={() => {\n                      handleApprove(data);\n                      setOpen(!open);\n                    }}\n                  >\n                    Approve\n                  </Button>,\n                ]);\n              setAllReconciled(transactionData);\n              setCurrent(transactionData.slice(0, 10));\n            })\n            .catch((error) => console.log(error));\n    })\n    \n    return (\n        <ReconciledContext.Provider value={{reconciledTrans, setReconciledTrans}}>\n            {props.children}\n        </ReconciledContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}